[
["index.html", "Chapter 1 Introduction", " Chapter 1 Introduction // TODO: Add introduction // TODO: What are news intensities? "],
["gettinstarted.html", "Chapter 2 Getting started", " Chapter 2 Getting started // TODO: interacting with the API // TODO: API using the FinTxtClient R Package "],
["theapi.html", "Chapter 3 News Intensity API 3.1 Basic usage 3.2 R and Python clients", " Chapter 3 News Intensity API The FinTxt news intensity API is hosted at . You can view the endpoints and their documentation at . The API contains four endpoints: languages: returns a list of available language for which you can query news intensities live: returns live news intensity metrics for a company or commodity and a language historic: returns historic news intensity metrics for a company or commodity, a language and a date portfolio: returns live or historic news intensity metrics for a weighted portfolio of stocks or commodities, a language and a date. The language endpoint can be queried without an API key. The historic endpoint can be queried without an API key for dates that go back beyond 30 days on the date of today. 3.1 Basic usage View the documentation for each endpoint for more information about headers and post bodies. 3.2 R and Python clients You can use the R and Python 3 clients to retrieve data from the API. These clients can be installed from their GitHub repositories. 3.2.1 R client Install the R client by executing devtools::install_github(&quot;FinTxt/FinTxtClient&quot;) After installing the package, register your API token by calling the following code: library(FinTxtClient) Sys.setenv(&quot;FINTXT_CLIENT_TOKEN&quot; = &quot;&lt;yourtoken&gt;&quot;) You can now access the various endpoints: # Set some variables identifiers = c(&quot;TRI.TO&quot;, &quot;IBM.N&quot;, &quot;RRD.N&quot;, &quot;SPGI.N&quot;, &quot;INTU.OQ&quot;, &quot;RELN.AS&quot;, &quot;WLSNc.AS&quot;, &quot;REL.L&quot;) weights = c(0.3, 0.1,0.05,0.05, 0.2,0.1,0.1,0.1) date = &quot;09-07-2018&quot; type = &quot;companies&quot; language = &quot;english&quot; # Load the client library(FinTxtClient) # Call the languages endpoint langs &lt;- fintxt_get_languages() # Get the live intensity for a stock one &lt;- fintxt_live_intensities_one(type = type, language = language, q = identifiers[1]) # Same but for commodity one &lt;- fintxt_live_intensities_one(type = &quot;commodities&quot;, language = language, q = &quot;milk&quot;) # Get historic intensity for a stock one &lt;- fintxt_historic_intensities_one(type = type, language = language, date = date, q=identifiers[1]) # Same but for commodity one &lt;- fintxt_historic_intensities_one(type = &quot;commodities&quot;, language = language, date = date, q=&quot;milk&quot;) # Get live intensity for a portfolio port &lt;- fintxt_live_intensities_portfolio(type = type, language = language, identifiers = c(identifiers, &quot;monkey&quot;), weights = c(weights, 0.4)) # For commodity port &lt;- fintxt_live_intensities_portfolio(type = &quot;commodities&quot;, language = language, identifiers = c(&quot;milk&quot;, &quot;soybeans&quot;), weights = c(0.5, 0.5)) # Get historic intensity for a portfolio port &lt;- fintxt_historic_intensities_portfolio(type = type, language = language, date = date, identifiers = c(identifiers, &quot;monkey&quot;), weights = c(weights, 0.4)) # For commodity port &lt;- fintxt_historic_intensities_portfolio(type = &quot;commodities&quot;, language = language, date = date, identifiers = c(&quot;milk&quot;, &quot;soybeans&quot;), weights = c(0.5, 0.5)) 3.2.2 Python client To install the python client, execute the following: pip install git+https://github.com/FinTxt/FinTxtClient-Py.git --user You can import the package as follows: from FinTxtClient import FinTxtClient Then, you can initiate the client using: client = FinTxtClient() # Optionally, pass &#39;key = &lt;your-key-here&gt;&#39; Using the client is as simple as calling the following functions: # Call the languages endpoint client.languages() # Call the live endpoint for a commodity client.live_one(&quot;commodities&quot;, &quot;english&quot;, &quot;milk&quot;) # Call the historic endpoint for a commodity and a date client.historic_one(&quot;commodities&quot;, &quot;english&quot;, &quot;13-07-2018&quot;, &quot;milk&quot;) # Call the live portfolio endpoint client.live_portfolio( _type = &quot;companies&quot;, language = &quot;english&quot;, identifiers=[&quot;TRI.TO&quot;, &quot;IBM.N&quot;, &quot;RRD.N&quot;, &quot;SPGI.N&quot;, &quot;INTU.OQ&quot;, &quot;RELN.AS&quot;, &quot;WLSNc.AS&quot;, &quot;REL.L&quot;], weights=[0.3, 0.1,0.05,0.05, 0.2,0.1,0.1,0.1]) # Call the historic portfolio endpoint client.historic_portfolio( _type = &quot;companies&quot;, language = &quot;english&quot;, date=&quot;13-07-2018&quot;, identifiers=[&quot;TRI.TO&quot;, &quot;IBM.N&quot;, &quot;RRD.N&quot;, &quot;SPGI.N&quot;, &quot;INTU.OQ&quot;, &quot;RELN.AS&quot;, &quot;WLSNc.AS&quot;, &quot;REL.L&quot;], weights=[0.3, 0.1,0.05,0.05, 0.2,0.1,0.1,0.1]) "],
["thedashboard.html", "Chapter 4 News Intensity Dashboard", " Chapter 4 News Intensity Dashboard // TODO: add information about the dashboard "],
["resources.html", "Chapter 5 Resources", " Chapter 5 Resources // TODO: add Davidâ€™s research "],
["references.html", "References", " References "]
]
